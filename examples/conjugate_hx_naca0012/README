This folder contains the files needed to run the coupled flat plate aerothermal example both with the MELDThermal coupling and the SU2 multiphysics validation.

To run the MELDThermal coupling between TACS and SU2, use the gen_TACS_bdf.py script to generate the input file for TACS. Then, run py_flatplate.py to run SU2 with MELDThermal and TACS coupling.

Notes regarding this example:
On convergence - as of now, I can't find any way to check if the CFD has converged in the Python wrapper. As a result, the example currently uses a very naive criteria to end the SU2->MELDThermal->TACS->MELDThermal->SU2 loop. That criteria is simply to run for a fixed number of iterations.
The reason for this is that I don't want to end the simulation if the CFD has not converged just because the temperature change in TACS between iterations is very small. Additionally, the rate of convergence of the CFD will affect how large each temperature change is in TACS, making it hard to set a convergence criteria on that anyway.
Currently instead I've just run the simulation twice, the first time taking note of approximately how many iterations it took for the CFD to converge to the desired tolerance, and then simply changing the number of iterations of the loop to be that number for the second run. This simulation is pretty fast so it doesn't matter too much, but keep this in mind if you make changes to the example.

On how often MELDThermal should update the temperatures - currently, I have the single zone SU2 config file set with the command ITER=1. That means the CFD only runs one iteration and then ends, meaning MELDThermal gets the fluxes and updates the temperatures in the CFD every iteration (once per loop in the Python script). Updating the CFD with new temperatures every iteration seemed to make the most sense to me.

To run the SU2 multiphysics verification, do SU2_CFD mz_flatplate.cfg. This uses the mz_flatplate_mesh.su2 mesh, which was generated by combining the mesh_flatplate_65x65.su2 mesh used by the other example with the plate_solid.su2 mesh generated by gen_SU2_solid.py (I've already done this for you). If you want to change the mesh, make sure you change it in the appropriate zone (fluid is zone 1, solid is zone 2 in the current mesh).

Use /git/tacs/extern/f5tovtk/f5tovtk to convert the f5 files into vtk files and then open them in paraview.